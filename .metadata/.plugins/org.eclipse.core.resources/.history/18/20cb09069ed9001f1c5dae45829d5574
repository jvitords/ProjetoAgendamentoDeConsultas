package entities;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.security.DigestInputStream;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.Scanner;

import service.ServicoDePagamento;
import service.ServicoDePagamentoComConvenio;
import service.ServicoDePagamentoSemConvenio;

public class Agenda {
	
	private List<Consulta> listaDeConsultas;
	
	public Agenda(List<Consulta> listaDeConsultas) {
		this.listaDeConsultas = listaDeConsultas;
	}

	public List<Consulta> getListaDeConsultas() {
		return listaDeConsultas;
	}

	public void setListaDeConsultas(List<Consulta> listaDeConsultas) {
		this.listaDeConsultas = listaDeConsultas;
	}

	public void mostrarTodasAsConsultas(List<Consulta> lista) { // método para ler todas as consultas registradas no meu arquivo txt
		
		System.out.println("----- CONSULTAS AGENDADAS -----\n");
		// abrir o arquivo e ler as informações
		try(BufferedReader leitorDoArquivo = new BufferedReader(new FileReader("C:\\Users\\JoãoVitorDuarteSanto\\Documents\\Estudos\\ProjetoAgendamento\\ProjetoAgendamentoDeConsultas\\Agendamentos.txt"))){
			// instanciar um "Paciente" e "Consulta" para mostrar as informações que estão na agenda 
			String lerLinha = leitorDoArquivo.readLine();
			while (lerLinha != null) {
				
				lerLinha = lerLinha.trim();
				
				String [] separadorDasInformacoes = lerLinha.split(",");
				Paciente paciente = new Paciente(separadorDasInformacoes[0], Integer.parseInt(separadorDasInformacoes[1]));
				
				// encontrar um jeito de pegar a data e horário do arquivo txt(que estão formatadas) para conseguir instanciar ela e criar a "Consulta"
				String dataRecebida = separadorDasInformacoes[2];
				DateTimeFormatter formatoDaData = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm");
				LocalDateTime data = LocalDateTime.parse(dataRecebida, formatoDaData);
				
				// procedimento escolhido 
				String procedimento = separadorDasInformacoes[3];
				
				// valor do procedimento 
				Double valor = Double.parseDouble(separadorDasInformacoes[4]);
				
				// analisar se a consulta é de convênio ou particular
				String tipoDaConsultaString = separadorDasInformacoes[5];
				TipoDoCliente tipo = null;
				if(tipoDaConsultaString.toLowerCase().charAt(0) == 'c') {
					tipo = TipoDoCliente.COM_CONVENIO;
				}
				else {
					tipo = TipoDoCliente.SEM_CONVENIO;
				}
				Consulta consulta = new Consulta(paciente, data, valor, procedimento, Status.AGENDADO, tipo);
				lista.add(consulta);
				lerLinha = leitorDoArquivo.readLine();	
				
			}
			// modelo de como posso mostrar as informações no console depois
			DateTimeFormatter formatoDaData = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm");
			for(Consulta consulta1 : lista) {
				System.out.println( consulta1.getPaciente().getNome() + " - " + consulta1.getProcedimento() + " - " + consulta1.getData().format(formatoDaData) + " - R$" + consulta1.getValor());
			}
		}
		catch (Exception e) {
			// depois preciso criar excessões personalizadas
			System.out.println("Ocorreu essa exceção: " + e);
		}
		
	}
	
	public void adicionarNovaConsulta(List<Consulta> lista) {
		
		try { // receber os dados da consulta e inicialzar a mesma
			Scanner scanner = new Scanner(System.in);
			System.out.print("Nome do paciente: ");
			String nomeDoPaciente = scanner.nextLine();
			System.out.print("CPF do paciente: ");
			Integer cpfDoPaciente = scanner.nextInt();
			
			DateTimeFormatter formatoDaData = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm");
			System.out.print("Data e horário da consulta: (dd/MM/yyyy HH:mm)");
			String dataRecebida = scanner.nextLine();
			LocalDateTime dataDoAgendamento = LocalDateTime.parse(dataRecebida, formatoDaData);
			
			System.out.print("Valor da consulta: R$");
			Double valorDaConsulta = scanner.nextDouble();
			
			System.out.print("Procedimento: ");
			String procedimento = scanner.nextLine();
			
			Status status = Status.AGENDADO;

			System.out.print("Tipo da consulta: (particular/convênio)");
			String tipoDaConsulta = scanner.nextLine();
			
			switch (tipoDaConsulta.toLowerCase().charAt(0)){
			case 'c': 
				Consulta consultaConvenio = new Consulta(new Paciente(nomeDoPaciente, cpfDoPaciente), dataDoAgendamento, valorDaConsulta, procedimento, status, TipoDoCliente.COM_CONVENIO);
				ServicoDePagamento servicoDePagamento = new ServicoDePagamentoComConvenio(consultaConvenio);
				servicoDePagamento.calcularValorDaConsulta(consultaConvenio.getValor());
				break;
			case 'p':
				Consulta consultaParticular = new Consulta(new Paciente(nomeDoPaciente, cpfDoPaciente), dataDoAgendamento, valorDaConsulta, procedimento, status, TipoDoCliente.SEM_CONVENIO);
				ServicoDePagamento servicoDePagamento2 = new ServicoDePagamentoSemConvenio(consultaParticular);
				servicoDePagamento2.calcularValorDaConsulta(consultaParticular.getValor());
				break;
			}
			// registrar essa nova consulta no nosso arquivo txt
			BufferedWriter registrarNoArquivo = new BufferedWriter(new FileWriter("C:\\Users\\JoãoVitorDuarteSanto\\Documents\\Estudos\\ProjetoAgendamento\\ProjetoAgendamentoDeConsultas\\Agendamentos.txt", true));S
		} 
		catch (Exception e) {
			System.out.println("Aconteceu uma exceção ao receber os dados da consulta: " + e);
		}
		
		
	}
}
